name: Generate Changelog

on:
  schedule:
    - cron: '0 12 * * 1' # Toda segunda-feira √†s 12h
  workflow_dispatch: # Permite rodar manualmente

permissions:
  contents: write

jobs:
  generate-changelog:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Configure Git User
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Get All Pull Requests merged with commit messages and diffs
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const since = new Date();
            since.setDate(since.getDate() - 7); // √öltimos 7 dias

            const pulls = await github.paginate(
              github.rest.pulls.list,
              {
                owner,
                repo,
                state: "closed",
                sort: "updated",
                direction: "desc"
              }
            );

            const mergedPRs = pulls.filter(pr => pr.merged_at && new Date(pr.merged_at) >= since);

            if (mergedPRs.length === 0) {
              require("fs").writeFileSync("changelog.md", "# üÜï Changelog - " + new Date().toISOString().split('T')[0] + "\n\n## ‚úÖ Pull Requests Merged\nNo updates this week.");
              return;
            }

            let changelogContent = "# üÜï Changelog - " + new Date().toISOString().split('T')[0] + "\n\n## ‚úÖ Pull Requests Merged\n";

            for (const pr of mergedPRs) {
              changelogContent += `\n### üîπ ${pr.title} (#${pr.number}) by @${pr.user.login}\n`;

              // Obt√©m os commits do PR
              const commits = await github.paginate(
                github.rest.pulls.listCommits,
                { owner, repo, pull_number: pr.number }
              );

              if (commits.length) {
                changelogContent += "  **Commits:**\n";
                for (const commit of commits) {
                  const commitSha = commit.sha;
                  const commitMessage = commit.commit.message;
                  const commitAuthor = commit.commit.author?.name || "unknown";

                  changelogContent += `  - **${commitMessage}** (by @${commitAuthor})\n`;

                  // Obt√©m o diff do commit
                  const commitData = await github.rest.repos.getCommit({
                    owner,
                    repo,
                    ref: commitSha
                  });

                  const patch = commitData.data.files
                    .map(file => `\n  üìù **${file.filename}**\n  \`\`\`diff\n  ${file.patch || "No changes available"}\n  \`\`\``)
                    .join("\n");

                  changelogContent += patch + "\n";
                }
              }
            }

            require("fs").writeFileSync("changelog.md", changelogContent);

      - name: Changelog
        run: cat changelog.md

      - name: Commit and Push Changelog
        run: |
          git add changelog.md
          git commit -m "üìù Update Changelog"
          git branch -M master # Garante que est√° na branch correta
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git push origin master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
